name: Deploy

on:
  push:
    branches:
      - master
  workflow_dispatch:

jobs:
  deploy:
    name: "Deploy to AWS EC2 Virtual Machine"
    runs-on: ubuntu-latest
    env:
      TESTING: 0
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy-key.pem
          chmod 600 ~/.ssh/deploy-key.pem
          cat >>~/.ssh/config <<END
          Host my-vm
            HostName $SSH_IP
            User $SSH_USER
            IdentityFile ~/.ssh/deploy-key.pem
            StrictHostKeyChecking no
          END
        env:
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_IP: ${{ secrets.SSH_IP }}

      #- name: Print project root directory
      #  run: ssh my-vm 'cd ${{ secrets.PROJECT_ROOT }} && pwd'
      - name: Deploy site
        run: ssh my-vm 'cd ${{ secrets.PROJECT_ROOT }} && sudo git fetch && sudo git reset --hard origin/master && sudo docker-compose down && sudo docker-compose up -d --build'

      #- name: Deployment Successful
      #  run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment Successful"

      - name: Check out Git repository
        uses: actions/checkout@v2

      - name: Deployment Test
        run: ssh my-vm 'cd ${{ secrets.PROJECT_ROOT }} && bash prod-test.sh'

      - name: Discord Notification Success
        if: ${{ success() && env.TESTING == 0 }}
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš€ Deployment Successful"

      - name: Discord Notification Failed
        if: ${{ failure() || env.TESTING != 0 }}
        run: curl -s -X POST "${{ secrets.DISCORD_WEBHOOK }}" -d "content=ðŸš¨ Deployment Failed"
